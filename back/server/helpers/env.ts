import fs from 'fs';

const {
  DB_USER,
  DB_PASS,
  DB_NAME,
  DB_HOST,
  DB_PORT,
  POSTGRES_PASSWORD,
  NODE_ENV,
  SERVER_PORT,
  SSL_CERTIFICATE_KEY_PATH, // DEPRECATED
  SSL_CERTIFICATE_CRT_PATH, // DEPRECATED
  LOCALHOST_SSL_CERTIFICATE_KEY_PATH,
  LOCALHOST_SSL_CERTIFICATE_CRT_PATH,
  SESSION_SECRET,
  SERVER_URL,
  BACKEND_URL,
  FRONTEND_URL,
  DEV_FALLBACK_ADMIN_EMAIL,
  DEV_FALLBACK_ADMIN_RESTRICTED,
  DEV_FALLBACK_USE_DB_ROLE,
  HTTP_PROXY,
  EMAIL_ALLOW_INVALID_CERTIFICATE,
  USE_POSTFIX,
  DKIM_HOSTNAME, // DEPRECATED
  SENDING_MAIL,
  DKIM_KEY_SELECTOR,
  DKIM_PRIVATE_KEY_PATH,
} = process.env;

const USE_POSTFIX_BOOL = USE_POSTFIX === 'true';
let DKIM_PRIVATE_KEY;
if (!!USE_POSTFIX_BOOL && !!DKIM_PRIVATE_KEY_PATH) {
  DKIM_PRIVATE_KEY = fs.readFileSync(DKIM_PRIVATE_KEY_PATH);
}

export default {
  IS_PRODUCTION: NODE_ENV !== 'development',
  DB_HOST,
  DB_PORT: DB_PORT ? Number.parseInt(DB_PORT, 10) : 5432,
  DB_USER,
  DB_NAME,
  DB_PASS: POSTGRES_PASSWORD || DB_PASS,
  SERVER_PORT: SERVER_PORT ? Number.parseInt(SERVER_PORT, 10) : 3001,
  LOCALHOST_SSL_CERTIFICATE_KEY_PATH:
    LOCALHOST_SSL_CERTIFICATE_KEY_PATH || SSL_CERTIFICATE_KEY_PATH || '',
  LOCALHOST_SSL_CERTIFICATE_CRT_PATH:
    LOCALHOST_SSL_CERTIFICATE_CRT_PATH || SSL_CERTIFICATE_CRT_PATH || '',
  SESSION_SECRET,
  BACKEND_URL: BACKEND_URL?.replace(/\/$/, '') || SERVER_URL?.replace(/\/$/, ''),
  FRONTEND_URL: FRONTEND_URL?.replace(/\/$/, '') || SERVER_URL?.replace(/\/$/, ''),
  DEV_FALLBACK_ADMIN_EMAIL,
  DEV_FALLBACK_ADMIN_RESTRICTED: DEV_FALLBACK_ADMIN_RESTRICTED === 'true',
  DEV_FALLBACK_USE_DB_ROLE: DEV_FALLBACK_USE_DB_ROLE === 'true',
  HTTP_PROXY,
  EMAIL_ALLOW_INVALID_CERTIFICATE,
  USE_POSTFIX: USE_POSTFIX_BOOL,
  SENDING_MAIL: SENDING_MAIL || `ne-pas-repondre@${DKIM_HOSTNAME}`,
  DKIM_KEY_SELECTOR,
  DKIM_PRIVATE_KEY,
};
